{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "CESI EATS - Shop API",
    "description": "Cette documentation explique les différents endpoints contenu dans le service dédié à la gestion des restaurants de CESI EATS"
  },
  "host": "localhost:8090",
  "basePath": "/",
  "tags": [
    {
      "name": "Notifications",
      "description": "Endpoints"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "JWT": {
      "type": "apiKey",
      "name": "jwt",
      "in": "cookies"
    }
  },
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "description": "Permet de récupérer la liste de l'ensemble des utilisateurs",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/logs": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "description": "Permet de récupérer les logs au format UTF-8",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/{userId}": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "description": "Permet de récupérer un utilisateur spécifique",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Authentication"
        ],
        "description": "Permet de bannir un utilisateur",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/current/user": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "description": "Permet de récupérer l'utilisateur actuel à partir de son JWT",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/perm/{userId}": {
      "delete": {
        "tags": [
          "Authentication"
        ],
        "description": "Permet de supprimer un utilisateur",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "description": "Permet de créer un utilisateur",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      },
      "put": {
        "tags": [
          "Authentication"
        ],
        "description": "Permet d'éditer un utilisateur",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "description": "Permet de se connecter",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "mail": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/token/verification": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "description": "Permet de vérifier la validité d'un JWT",
        "parameters": [
          {
            "name": "slice(7",
            "in": "header",
            "type": "string"
          },
          {
            "name": "length",
            "in": "header",
            "type": "string"
          },
          {
            "name": "x-access-token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/logout/{id}": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "description": "Permet de déconnecter un utilisateur",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/referral/code": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "description": "Permet de récupérer un code de parrainage",
        "parameters": [
          {
            "name": "slice(7",
            "in": "header",
            "type": "string"
          },
          {
            "name": "length",
            "in": "header",
            "type": "string"
          },
          {
            "name": "x-access-token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}